{
	"info": {
		"_postman_id": "c41a5911-2805-4022-8bae-f7ac6851efc5",
		"name": "03-25 California_address_ADVANCED",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44858941",
		"_collection_link": "https://azadyesenov.postman.co/workspace/bbf8657c-0920-42c5-87ff-0d59819775bf/collection/44858941-c41a5911-2805-4022-8bae-f7ac6851efc5?action=share&source=collection_link&creator=44858941"
	},
	"item": [
		{
			"name": "Add new address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string id\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1000b\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"server\", \"Pepyaka\");\r",
							"    pm.response.to.have.header(\"x-content-type-options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"ID\", jsonData.id);\r",
							"\r",
							"pm.test(\"ID is correct\", function () {\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"ID\"));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.clear()\r",
							"pm.environment.set(\"COMPANY\", \"Apple-\" + new Date().getTime());\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"address\": {\r\n        \"fullName\": {\r\n            \"firstName\": \"Azady\",\r\n            \"lastName\": \"Esenov\"\r\n        },\r\n        \"company\": \"{{COMPANY}}\",\r\n        \"taxInfo\": {\r\n            \"id\": null,\r\n            \"type\": null\r\n        },\r\n        \"addressLine1\": \"5610 2nd Avenue\",\r\n        \"addressLine2\": null,\r\n        \"street\": {\r\n            \"name\": null,\r\n            \"number\": null\r\n        },\r\n        \"city\": \"Brooklyn\",\r\n        \"country\": \"USA\",\r\n        \"subdivision\": \"NY\",\r\n        \"zipCode\": \"11220\",\r\n        \"phoneNumber\": null,\r\n        \"location\": {\r\n            \"latitude\": 40.6455806,\r\n            \"longitude\": -74.0209235\r\n        }\r\n    },\r\n    \"setAsDefault\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Make default address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1000b\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"server\", \"Pepyaka\");\r",
							"    pm.response.to.have.header(\"x-content-type-options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"{}\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"{{ID}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/default",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"default"
					]
				}
			},
			"response": []
		},
		{
			"name": "Show default address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1000b\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"server\", \"Pepyaka\");\r",
							"    pm.response.to.have.header(\"x-content-type-options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"pm.test(\"Id is in response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"ID\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Id is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address.id).to.eql(pm.environment.get(\"ID\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Last name and First name are correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address.fullName.firstName).to.eql(\"Azady\");\r",
							"    pm.expect(jsonData.address.fullName.lastName).to.eql(\"Esenov\");\r",
							"});\r",
							"\r",
							"pm.test(\"Company is in response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"COMPANY\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Company is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address.company).to.eql(pm.environment.get(\"COMPANY\"));\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"FN\", jsonData.address.fullName.firstName);\r",
							"pm.environment.set(\"LN\", jsonData.address.fullName.lastName);\r",
							"pm.environment.set(\"ZIP\", jsonData.address.zipCode);\r",
							"pm.environment.set(\"COUNTRY\", jsonData.address.country);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/get-default-address",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"get-default-address"
					]
				}
			},
			"response": []
		},
		{
			"name": "Show all addresses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 100ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 2000b\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"content-encoding\", \"gzip\");\r",
							"    pm.response.to.have.header(\"server\", \"Pepyaka\");\r",
							"    pm.response.to.have.header(\"x-content-type-options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"pm.test(\"Id is in response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"ID\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Body has correct Last name\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"COMPANY\"));\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Show specific address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1000b\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"server\", \"Pepyaka\");\r",
							"    pm.response.to.have.header(\"x-content-type-options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"pm.test(\"Id is in response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"ID\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Id is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address.id).to.eql(pm.environment.get(\"ID\"));\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Company is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address.company).to.eql(pm.environment.get(\"COMPANY\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Reponse body is correct format\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address).to.be.a(\"object\");\r",
							"    pm.expect(jsonData.address.id).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.fullName).to.be.a(\"object\");\r",
							"    pm.expect(jsonData.address.fullName.firstName).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.fullName.lastName).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.location).to.be.a(\"object\");\r",
							"    pm.expect(jsonData.address.location.latitude).to.be.a(\"number\");\r",
							"    pm.expect(jsonData.address.location.longitude).to.be.a(\"number\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"First and Last name correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address.fullName.firstName).to.eql(pm.environment.get(\"FN\"));\r",
							"    pm.expect(jsonData.address.fullName.lastName).to.eql(pm.environment.get(\"LN\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Country correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address.country).to.eql(pm.environment.get(\"COUNTRY\"));\r",
							"});\r",
							"\r",
							"pm.test(\"ZIP correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address.zipCode).to.eql(pm.environment.get(\"ZIP\"));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit one address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1000b\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"server\", \"Pepyaka\");\r",
							"    pm.response.to.have.header(\"x-content-type-options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body contains {} in response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"{}\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.unset(\"COMPANY\");\r",
							"pm.environment.set(\"COMPANY\", \"Google-\" + new Date().getTime());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"address\": {\r\n        \"id\": \"{{ID}}\",\r\n        \"fullName\": {\r\n            \"firstName\": \"Bredd\",\r\n            \"lastName\": \"Pitt\"\r\n        },\r\n        \"company\": \"{{COMPANY}}\",\r\n        \"taxInfo\": {\r\n            \"id\": null,\r\n            \"type\": null\r\n        },\r\n        \"addressLine1\": \"475 maxine Street\",\r\n        \"addressLine2\": null,\r\n        \"street\": {\r\n            \"name\": null,\r\n            \"number\": null\r\n        },\r\n        \"city\": \"Brooklyn\",\r\n        \"country\": \"USA\",\r\n        \"subdivision\": \"NY\",\r\n        \"zipCode\": \"11220\",\r\n        \"phoneNumber\": null,\r\n        \"location\": {\r\n            \"latitude\": 40.6455806,\r\n            \"longitude\": -74.0209235\r\n        }\r\n    },\r\n    \"setAsDefault\": true,\r\n    \"fieldMask\": {\r\n        \"paths\": [\r\n            \"fullName.firstName\",\r\n            \"fullName.lastName\",\r\n            \"company\",\r\n            \"addressLine1\",\r\n            \"city\",\r\n            \"country\",\r\n            \"subdivision\",\r\n            \"zipCode\",\r\n            \"location.latitude\",\r\n            \"location.longitude\",\r\n            \"setAsDefault\"\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check edited address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1000b\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"server\", \"Pepyaka\");\r",
							"    pm.response.to.have.header(\"x-content-type-options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"pm.test(\"Id is in response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"ID\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Id is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address.id).to.eql(pm.environment.get(\"ID\"));\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"NEW Company is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address.company).to.eql(pm.environment.get(\"COMPANY\"));\r",
							"});\r",
							"\r",
							"pm.test(\"New Company is in response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"COMPANY\"));\r",
							"});\r",
							"\r",
							"pm.test(\"First and Last name correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address.fullName.firstName).to.eql(\"Bredd\");\r",
							"    pm.expect(jsonData.address.fullName.lastName).to.eql(\"Pitt\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses//{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1000b\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"server\", \"Pepyaka\");\r",
							"    pm.response.to.have.header(\"x-content-type-options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"pm.test(\"Body contains {} in response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"{}\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete deleted address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is not 200\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"    pm.response.to.be.error;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1000b\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"server\", \"Pepyaka\");\r",
							"    pm.response.to.have.header(\"x-content-type-options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Id is in response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"ID\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be okay to process\", function () {\r",
							"    pm.response.to.be.error;\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Details correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.details.applicationError.code).to.eql(\"cant_find_address_by_id\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response body is in correct format\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.details).to.be.a(\"object\");\r",
							"    pm.expect(jsonData.details.applicationError).to.be.a(\"object\");\r",
							"    pm.expect(jsonData.details.applicationError.code).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Show specific deleted address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is not 200\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"    pm.response.to.be.error;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1000b\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"server\", \"Pepyaka\");\r",
							"    pm.response.to.have.header(\"x-content-type-options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Id is in response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"ID\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be okay to process\", function () {\r",
							"    pm.response.to.be.error;\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Details correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.details.applicationError.code).to.eql(\"cant_find_address_by_id\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response body is in correct format\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.details).to.be.a(\"object\");\r",
							"    pm.expect(jsonData.details.applicationError).to.be.a(\"object\");\r",
							"    pm.expect(jsonData.details.applicationError.code).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit deleted address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is not 200\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"    pm.response.to.be.error;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 1000b\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"server\", \"Pepyaka\");\r",
							"    pm.response.to.have.header(\"x-content-type-options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Id is in response\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(pm.environment.get(\"ID\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be okay to process\", function () {\r",
							"    pm.response.to.be.error;\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Details correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.details.applicationError.code).to.eql(\"cant_find_address_by_id\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response body is in correct format\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.details).to.be.a(\"object\");\r",
							"    pm.expect(jsonData.details.applicationError).to.be.a(\"object\");\r",
							"    pm.expect(jsonData.details.applicationError.code).to.be.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"address\": {\r\n        \"id\": \"911c9432-881d-4bdd-adf2-d4c0cb841580\",\r\n        \"fullName\": {\r\n            \"firstName\": \"Iron\",\r\n            \"lastName\": \"Cool\"\r\n        },\r\n        \"company\": \"Cool Inc\",\r\n        \"taxInfo\": {\r\n            \"id\": null,\r\n            \"type\": null\r\n        },\r\n        \"addressLine1\": \"345 Park Avenue\",\r\n        \"addressLine2\": null,\r\n        \"street\": {\r\n            \"name\": null,\r\n            \"number\": null\r\n        },\r\n        \"city\": \"New York\",\r\n        \"country\": \"USA\",\r\n        \"subdivision\": \"NY\",\r\n        \"zipCode\": \"10154\",\r\n        \"phoneNumber\": \"777-777-777\",\r\n        \"location\": {\r\n            \"latitude\": 40.7579853,\r\n            \"longitude\": -73.9722987\r\n        }\r\n    },\r\n    \"setAsDefault\": false,\r\n    \"fieldMask\": {\r\n        \"paths\": [\r\n            \"fullName.firstName\",\r\n            \"fullName.lastName\",\r\n            \"company\",\r\n            \"addressLine1\",\r\n            \"city\",\r\n            \"country\",\r\n            \"subdivision\",\r\n            \"zipCode\",\r\n            \"phoneNumber\",\r\n            \"location.latitude\",\r\n            \"location.longitude\",\r\n            \"setAsDefault\"\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check all addresses after changes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.ok;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 100ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 2000b\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"pm.test(\"Header is correct\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json;charset=utf-8\");\r",
							"    pm.response.to.have.header(\"content-encoding\", \"gzip\");\r",
							"    pm.response.to.have.header(\"server\", \"Pepyaka\");\r",
							"    pm.response.to.have.header(\"x-content-type-options\", \"nosniff\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "yv8R08GdPSeShyYPFdu1adkIzJZ2-KoLIjV_bkDsoDQ.eyJpbnN0YW5jZUlkIjoiZjQ2Y2Q1MDItZjcyZi00NGY3LTk2MzgtNWRhMWRlYjBiNGU3IiwiYXBwRGVmSWQiOiIxNTA1Yjc3NS1lODg1LWViMWItYjY2NS0xZTQ4NWQ5YmY5MGUiLCJtZXRhU2l0ZUlkIjoiMjhiNzkzZDYtNTQyNC00MDU4LTgwNDktMDI2YTRkYjAyODJmIiwic2lnbkRhdGUiOiIyMDI1LTA1LTI1VDE5OjEwOjI5Ljk4MloiLCJ1aWQiOiI4MDJkOTJjMC0yMDEzLTQ0MGQtYjg2Ni1hODYyYWExYWE2MjYiLCJkZW1vTW9kZSI6ZmFsc2UsImFpZCI6IjYwYmMyNmZiLTFmOWItNGZiYS1iYTEyLTk5NGFlMThmMDM2MSIsImJpVG9rZW4iOiJkY2RiNDZkNC1hMzBiLTA0YWYtMTY3MS01ZmNiOTMwMDljYzgiLCJzaXRlT3duZXJJZCI6ImY5MTRmMTFjLWFhYjMtNDUyNy04ZDRlLWJhYjc2MjE0M2E2MCIsImV4cGlyYXRpb25EYXRlIjoiMjAyNS0wNS0yNVQyMzoxMDoyOS45ODJaIiwiaGFzVXNlclJvbGUiOmZhbHNlLCJzaWQiOiIyNzY1OTA0MS03YTE2LTQ5MTYtOTA5Yi1hMTFiNDU2NzA1NGIiLCJzY3QiOiIyMDI1LTA1LTA0VDE3OjE3OjA0Ljc0OVoiLCJicyI6Im1sWEdrS19EaGRWOGJxV1p2MmpCUDJvOVl3RUtyNVhzLWNCS3RCbkFrV3ciLCJzY2QiOiIyMDE5LTA5LTAxVDAyOjE3OjMzLjQ3N1oifQ",
				"type": "string"
			},
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "FN",
			"value": "",
			"type": "string"
		},
		{
			"key": "LS",
			"value": "",
			"type": "string"
		}
	]
}